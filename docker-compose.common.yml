version: '2'
volumes:
  redis_data:
    driver: local
  s3_data:
    driver: local
  consul_data2:
    driver: local
  pgmaster_data:
    driver: local
services:
  s3:
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password
    volumes:
    - s3_data:/data
    ports:
    - 9000:9000/tcp
    command:
    - server
    - /data
    labels:
      traefik.frontend.rule: Host:fake-s3.bonde.devel
      traefik.port: '9000'
      traefik.enable: 'true'
      traefik.alias: fake-s3
  smtp:
    image: mailhog/mailhog
    environment:
      MH_HOSTNAME: smtp.bonde.devel
    ports:
    - 1025:1025/tcp
    - 8025:8025/tcp
    labels:
      traefik.frontend.rule: Host:fake-smtp.bonde.devel
      traefik.port: '8025'
      traefik.enable: 'true'
      traefik.alias: fake-smtp
  consul:
    image: progrium/consul
    volumes:
    - consul_data2:/consul/data
    ports:
    - 8400:8400/tcp
    - 8500:8500/tcp
    - 8600:53/udp
    command:
    - -server
    - -bootstrap
    - -log-level
    - info
    - -ui-dir
    - /ui
    labels:
      traefik.frontend.rule: Host:consul.bonde.devel
      traefik.port: '8500'
      traefik.enable: 'true'
      traefik.alias: consul
  storeconfig:
    image: containous/traefik
    command: storeconfig -c /data/traefik.toml --debug --consul --consul.endpoint=consul:8500
    volumes:
      - ./lb:/data
    # depends_on:
    #   - consul
  traefik:
    image: containous/traefik
    environment:
      AWS_ACCESS_KEY_ID: xxxxxxx
      AWS_SECRET_ACCESS_KEY: xxxxxx
      AWS_REGION: us-east-1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    # depends_on:
    # - consul:consul
    ports:
    - 80:80/tcp
    - 8080:8080/tcp
    - 443/tcp
    command:
    - --consul
    - --consul.endpoint=consul:8500
    labels:
      traefik.frontend.rule: Host:traefik.bonde.devel
      traefik.alias: traefik
      traefik.port: '8080'
      traefik.enable: 'true'
  pgmaster:
    image: postdock/postgres:latest-postgres96-repmgr32
    environment:
      CLEAN_OVER_REWIND: '0'
      CLUSTER_NAME: pg_cluster
      CLUSTER_NODE_NETWORK_NAME: pgmaster
      CONFIGS: listen_addresses:'*';max_replication_slots:5
      CONFIGS_DELIMITER_SYMBOL: ;
      NODE_ID: '1'
      NODE_NAME: node1
      NODE_PRIORITY: '100'
      POSTGRES_DB: monkey_db
      POSTGRES_PASSWORD: monkey_pass
      POSTGRES_USER: monkey_user
      REPLICATION_DB: replication_db
      REPLICATION_PASSWORD: replication_pass
      REPLICATION_PRIMARY_HOST: pgmaster
      REPLICATION_USER: replication_user
      SSH_ENABLE: '0'
    volumes:
    - pgmaster_data:/var/lib/postgresql/data
    ports:
    - 5444:5432/tcp
  pgpool:
    image: postdock/pgpool:latest-pgpool37-postgres96
    environment:
      BACKENDS: 0:pgmaster:5432:1:/var/lib/postgresql/data:ALLOW_TO_FAILOVER
      CHECK_PASSWORD: monkey_pass
      CHECK_PGCONNECT_TIMEOUT: '3'
      CHECK_USER: monkey_user
      CONFIGS: num_init_children:250,max_pool:4
      DB_USERS: monkey_user:monkey_pass
      PCP_PASSWORD: pcp_pass
      PCP_USER: pcp_user
      REQUIRE_MIN_BACKENDS: '1'
      SSH_ENABLE: '0'
      WAIT_BACKEND_TIMEOUT: '60'
    # depends_on:
    # - pgmaster:pgmaster
    ports:
    - 5432:5432/tcp
  redis:
    image: redis
    volumes:
    - redis_data:/var/lib/redis
    ports:
    - 6379:6379/tcp
    command:
    - redis-server
    - --appendonly
    - 'yes'
  assets-images:
    image: h2non/imaginary
    environment:
      PORT: '9009'
    stdin_open: true
    tty: true
    ports:
    - 9009:9000/tcp
    command:
    - -cors
    - -gzip
    - -concurrency
    - '10'
    - -enable-url-source
    labels:
      traefik.frontend.rule: Host:img.bonde.devel
      traefik.enable: 'true'
      traefik.alias: img
      traefik.port: '9009'
      io.rancher.container.pull_image: always
