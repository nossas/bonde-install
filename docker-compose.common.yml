version: '2'

volumes:
  redis_data:
    driver: local
  s3_data:
    driver: local
  elk_data:
    driver: local
  pgmaster_data:
    driver: local

services:
  redis:
    image: redis:3
    volumes:
    - redis_data:/var/lib/redis
    ports:
    - 6379:6379/tcp
    command:
    - redis-server
    - --appendonly
    - 'yes'

  s3:
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password
    volumes:
    - s3_data:/data
    ports:
    - 9000:9000/tcp
    command:
    - server
    - /data
    labels:
      - traefik.enable=true
      - traefik.http.routers.s3.rule=Host(`s3.bonde.devel`)
      - traefik.http.services.s3.loadbalancer.server.port=9000
  smtp:
    image: mailhog/mailhog
    environment:
      MH_HOSTNAME: smtp.bonde.devel
    ports:
    - 1025:1025/tcp
    - 8025:8025/tcp
    labels:
      - traefik.enable=true
      - traefik.http.routers.smtp.rule=Host(`smtp.bonde.devel`)
      - traefik.http.services.smtp.loadbalancer.server.port=8025

  traefik:
    image: "traefik:v2.3"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    # - --configfile=/traefik.toml
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # - "./traefik.toml:/traefik.toml"
    environment:
      AWS_ACCESS_KEY_ID: xxxxxxx
      AWS_SECRET_ACCESS_KEY: xxxxxx
      AWS_REGION: us-east-1
    labels:
      - traefik.enable=true
      - "traefik.http.routers.traefik.rule=Host(`traefik.bonde.devel`)"
      - traefik.http.services.traefik.loadbalancer.server.port=8080

  pgmaster:
    image: postgres:10
    environment:
      POSTGRES_DB: monkey_db
      POSTGRES_PASSWORD: monkey_pass
      POSTGRES_USER: monkey_user
    volumes:
    - pgmaster_data:/var/lib/postgresql/data
    - ./backups:/backups
    ports:
    - 5432/tcp

  assets-images:
    image: h2non/imaginary
    environment:
      PORT: '9009'
    stdin_open: true
    tty: true
    ports:
    - 9009:9000/tcp
    command:
    - -cors
    - -gzip
    - -concurrency
    - '10'
    - -enable-url-source
    labels:
      - traefik.enable=true
      - "traefik.http.routers.assets-images.rule=Host(`img.bonde.devel`)"

  elk:
    image: sebp/elk
    ports:
      - "5601:5601"
      - "9200:9200"
      - "5044:5044"
    volumes:
      - elk_data:/var/lib/elasticsearch
    labels:
      - traefik.enable=true
      - "traefik.http.routers.elk.rule=Host(`kibana.bonde.devel`)"
      - "traefik.http.services.elk.loadbalancer.server.port=5601"

  # sudo sysctl -w vm.max_map_count=262144

  pgadmin4:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin_foo@bar.com
      PGADMIN_DEFAULT_PASSWORD: foobar!!
    depends_on:
      - pgmaster
    ports:
      - 5433:80/tcp
    labels:
      - traefik.enable=true
      - "traefik.http.routers.pgadmin4.rule=Host(`pgadmin.bonde.devel`)"

  # filebeat:
  #   image: docker.elastic.co/beats/filebeat:7.10.0
  #   environment:
  #     setup.kibana.host: elk:5601
  #     output.elasticsearch.hosts: elk:9200
  #   user: root
  #   volumes:
  #     - "./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro"
  #     - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #   depends_on:
  #     - elk

  # metricbeat:
  #   image: docker.elastic.co/beats/metricbeat:7.10.0
  #   environment:
  #     setup.kibana.host: elk:5601
  #     output.elasticsearch.hosts: elk:9200
  #   user: root
  #   volumes:
  #     - "./metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro"
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #     - "/sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro"
  #     - "/proc:/hostfs/proc:ro"
  #     - "/:/hostfs:ro"
  #   depends_on:
  #     - elk

  # heartbeat:
  #   image: docker.elastic.co/beats/heartbeat:7.10.0
  #   environment:
  #     setup.kibana.host: elk:5601
  #     output.elasticsearch.hosts: elk:9200
  #   user: root
  #   volumes:
  #     - "./heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro"
  #     - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #   depends_on:
  #     - elk

  # scope:
  #   image: weaveworks/scope:1.11.4
  #   network_mode: "host"
  #   pid: "host"
  #   privileged: true
  #   labels:
  #     - "works.weave.role=system"
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock:rw"
  #   command:
  #     - "--probe.docker=true"

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
    - REDIS_HOSTS=local:redis:6379
    ports:
    - "8081:8081"