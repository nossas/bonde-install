version: '2'

volumes:
  redis_data:
    driver: local
  s3_data:
    driver: local
  pgmaster_data:
    driver: local

services:
  s3:
    extends:
      file: docker-compose.common.yml
      service: s3

  smtp:
    extends:
      file: docker-compose.common.yml
      service: smtp

  traefik:
    extends:
      file: docker-compose.common.yml
      service: traefik

  pgmaster:
    extends:
      file: docker-compose.common.yml
      service: pgmaster

  redis:
    extends:
      file: docker-compose.common.yml
      service: redis

  migrations:
    extends:
      file: docker-compose.workers.yml
      service: migrations
    depends_on:
    - pgmaster
    environment:
      DATABASE_URL: postgres://monkey_user:monkey_pass@pgmaster/bonde
    volumes:
    - ./../bonde-migrations/:/volumes

  api-rest:
    extends:
      file: docker-compose.apis.yml
      service: api-rest
    depends_on:
    - pgmaster
    labels:
      traefik.frontend.rule: Host:api-rest.bonde.devel
      traefik.port: '3000'
      traefik.enable: 'true'
      traefik.alias: api-rest

  api-v2:
    extends:
      file: docker-compose.apis.yml
      service: api-v2
    depends_on:
    - pgmaster

  api-graphql:
    extends:
      file: docker-compose.apis.yml
      service: api-graphql
    depends_on:
    - pgmaster
    - api-v2
    - graphql-auth
    ports:
    - "5007:8080"
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: "segredo123"
      HASURA_GRAPHQL_AUTH_HOOK: http://graphql-auth:4001/webhook
      HASURA_GRAPHQL_AUTH_HOOK_MODE: "GET"
    labels:
      traefik.frontend.rule: Host:api-graphql.bonde.devel
      traefik.enable: 'true'
      traefik.alias: api-graphql
      traefik.port: '8080'

  graphql-auth:
    extends:
      file: docker-compose.webhooks.yml
      service: graphql-auth
    environment:
      PORT: 4001
    labels:
      traefik.frontend.rule: Host:graphql-auth.bonde.devel
      traefik.port: '4001'
      traefik.enable: 'true'

  chatbot:
    extends:
      file: docker-compose.webhooks.yml
      service: chatbot
    depends_on:
    - api-graphql
    environment:
      PORT: 5000
      APP_DOMAIN: http://chatbot.bonde.devel
      JWT_TOKEN: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiY29tbW9uX3VzZXIiLCJ1c2VyX2lkIjoxLCJpYXQiOjE1NjgxMjAxMzQsImV4cCI6MTU2ODIwNjUzNCwiYXVkIjoicG9zdGdyYXBoaWxlIiwiaXNzIjoicG9zdGdyYXBoaWxlIn0.I52gMRQ8CpOAjRTkxBBHVC-qH6Mnll87ah2wdVgbLw0
    labels:
      traefik.frontend.rule: Host:chatbot.bonde.devel
      traefik.port: '5000'
      traefik.enable: 'true'

  webhooks-registry:
    extends:
      file: docker-compose.webhooks.yml
      service: webhooks-registry
    depends_on:
    - api-graphql

  webhooks-zendesk:
    extends:
      file: docker-compose.webhooks.yml
      service: webhooks-zendesk
    depends_on:
    - api-graphql

  webhooks-solidarity-count:
    extends:
      file: docker-compose.webhooks.yml
      service: webhooks-solidarity-count
    depends_on: 
    - api-graphql

  webhooks-solidarity-match:
    extends:
      file: docker-compose.webhooks.yml
      service: webhooks-solidarity-match
    depends_on: 
    - api-graphql

  webhook-mail:
    extends:
      file: docker-compose.webhooks.yml
      service: webhook-mail
    depends_on: 
    - api-graphql
    - smtp